import { Form } from 'element-ui';
import { Component, Inject, Vue } from 'vue-property-decorator';
import { <%= entityAngularName %> } from '@/shared/model/<%= entityModelFileName %>.model';
import <%= entityAngularName %>Service from '@/shared/service/<%= entityModelFileName %>.service';

@Component
export default class extends Vue {
  private entityService: <%= entityAngularName %>Service = new <%= entityAngularName %>Service();

  private list: <%= entityAngularName %>[] = [];
  private total = 0;
  private listLoading = true;
  private listQuery = {
    page: 1,
    limit: 20,
    importance: undefined,
    title: undefined,
    type: undefined
  };

  private textMap = {
    update: '编辑',
    create: '新增'
  };

  private editItem: <%= entityAngularName %> = {};
  private dialogStatus: string = 'create';
  private dialogFormVisible: boolean = false;

  private rules = {
    cardNo: [{ required: true, message: '必输', trigger: 'change' }]
  };

  created() {
    this.getList();
  }

  private handleFilter() {
    this.listQuery.page = 1;
    this.getList();
  }

  private handleUpdate(row: any) {
    this.editItem = Object.assign({}, row);
    this.dialogStatus = 'update';
    this.dialogFormVisible = true;
    this.$nextTick(() => {
      (this.$refs['dataForm'] as Form).clearValidate();
    });
  }

  private handleCreate() {
    this.editItem = {};
    //this.editItem.status = NormalStatus.ENABLED;
    this.dialogStatus = 'create';
    this.dialogFormVisible = true;
    this.$nextTick(() => {
      (this.$refs['dataForm'] as Form).clearValidate();
    });
  }

  private handleModifyStatus(row: <%= entityAngularName %>, status: any) {
    this.editItem = Object.assign({}, row);
    this.editItem.status = status;
    this.updateItem(this.editItem);
  }

  private async getList() {
    this.listLoading = true;
    let data = await this.entityService.retrieve();
    this.list = data;
    this.total = data.length;
    setTimeout(() => {
      this.listLoading = false;
    }, 0.5 * 1000);
  }

  private createData() {
    (this.$refs['dataForm'] as Form).validate(async valid => {
      if (valid) {
        let itemCreated: <%= entityAngularName %> = await this.entityService.create(
          this.editItem
        );
        this.list.push(itemCreated);
        this.dialogFormVisible = false;
        this.$notify({
          title: '成功',
          message: '创建成功',
          type: 'success',
          duration: 2000
        });
      }
    });
  }

  private updateData() {
    (this.$refs['dataForm'] as Form).validate(async valid => {
      if (valid) {
        this.updateItem(this.editItem);
      }
    });
  }

  private async updateItem(item: <%= entityAngularName %>) {
    let itemUpdated: <%= entityAngularName %> = await this.entityService.update(item);
    let index = this.list.findIndex(entity => {
      return entity.id === itemUpdated.id;
    });
    this.list.splice(index, 1, itemUpdated);

    this.dialogFormVisible = false;
    this.$notify({
      title: '成功',
      message: '更新成功',
      type: 'success',
      duration: 2000
    });
  }
}