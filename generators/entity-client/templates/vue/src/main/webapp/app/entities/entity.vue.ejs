<template>
    <div class="app-container">
        <div class="filter-container">
            <el-input v-model="listQuery.login" placeholder style="width: 200px;" class="filter-item"
                @keyup.enter.native="handleFilter" />
            <el-button class="filter-item" type="primary" icon="el-icon-search" @click="handleFilter">查询</el-button>
            <el-button class="filter-item" style="margin-left: 10px;" type="primary" icon="el-icon-edit" @click="handleCreate">
                添加</el-button>
        </div>
        <el-table v-loading="listLoading" :data="list" border fit highlight-current-row style="width: 100%;">
                <%_ for (idx in fields) { _%>
                <el-table-column label="<%=fields[idx].javadoc || fields[idx].fieldName%>" prop="<%=fields[idx].fieldName%>" align="center" width="80">
                    <template slot-scope="scope">
                        <span>{{ scope.row.<%=fields[idx].fieldName%> }}</span>
                    </template>
                </el-table-column>
                <%_ } _%>
                <el-table-column label="操作" align="center" width="230" class-name="small-padding fixed-width">
                    <template slot-scope="{row}">
                        <el-button type="primary" size="mini" @click="handleUpdate(row)">修改</el-button>
                        <el-button v-if="row.status !== 'ENABLED'" size="mini" type="success"
                            @click="handleModifyStatus(row,'ENABLED')">启用</el-button>
                        <el-button v-if="row.status !== 'DISABLED'" size="mini" type="danger"
                            @click="handleModifyStatus(row,'DISABLED')">禁用</el-button>
                    </template>
                </el-table-column>
        </el-table>
        <el-dialog :title="textMap[dialogStatus]" :visible.sync="dialogFormVisible">
            <el-form ref="dataForm" :rules="rules" :model="editItem" label-position="left" label-width="100px"
                style="width: 400px; margin-left:50px;">
                <el-form-item label="ID" prop="type">
                    <el-input v-model="editItem.id" class="filter-item" readonly />
                </el-form-item>
                <%_ for (idx in fields) {
                        const fieldName = fields[idx].fieldName;
                        const fieldNameCapitalized = fields[idx].fieldNameCapitalized;
                        const fieldNameHumanized = fields[idx].fieldNameHumanized;
                        const fieldType = fields[idx].fieldType;
                        const fieldTypeBlobContent = fields[idx].fieldTypeBlobContent;
                        const fieldChName= fields[idx].javadoc || fields[idx].fieldName;
                        let fieldInputType = 'text';
                        let fieldInputClass = 'form-control';
                        let ngModelOption = '';
                        const translationKey = `${i18nKeyPrefix}.${fieldName}`;
                        if (['Integer', 'Long', 'Float', 'Double', 'BigDecimal', 'Duration'].includes(fieldType)) {
                            fieldInputType = 'number';
                        } else if (fieldType === 'LocalDate') {
                            fieldInputType = 'date';
                        } else if (['Instant', 'ZonedDateTime'].includes(fieldType)) {
                            fieldInputType = 'datetime-local';
                        } else if (fieldType === 'Boolean') {
                            fieldInputType = 'checkbox';
                            fieldInputClass = 'form-check';
                        } else if (['byte[]', 'ByteBuffer'].includes(fieldType) && fieldTypeBlobContent !== 'text') {
                            fieldInputType = 'hidden';
                        }
                    _%>
                <el-form-item label="<%=fieldChName%>" prop="type">
                    <%_ if (fields[idx].fieldIsEnum) { _%>
                    <el-select v-model="editItem.<%= fieldName %>">
                        <%_ const enumPrefix = angularAppName + '.'+ fieldType;
                                                    const values = fields[idx].fieldValues.replace(/\s/g, '').split(',');
                                                    for (key in values) {
                                                        const value = values[key]; _%>
                        <el-option key="<%= value %>" value="<%= value %>" label="<%=value%>"/>
                        <%_ } _%>
                    </el-select>
                    <%_ } else { _%>
                    <%_ if (fieldType === 'LocalDate') { _%>
                    <div class="input-group">
                        <input id="<%= entityFileName %>-<%= fieldName %>" type="date" class="<%= fieldInputClass %>"
                            name="<%= fieldName %>"
                            :class="{'valid': !$v.<%= entityInstance %>.<%= fieldName %>.$invalid, 'invalid': $v.<%= entityInstance %>.<%= fieldName %>.$invalid }"
                            v-model="$v.<%= entityInstance %>.<%= fieldName %>.$model"
                            <% if (fields[idx].fieldValidate === true && fields[idx].fieldValidateRules.includes('required')) { %>
                            required<% } %> />
                    </div>
                    <%_ } else if (['Instant'].includes(fieldType)) { _%>
                    <div class="d-flex">
                        <input id="<%= entityFileName %>-<%= fieldName %>" type="datetime-local"
                            class="<%= fieldInputClass %>" name="<%= fieldName %>"/>
                    </div>
                    <%_ } else if (['ZonedDateTime'].includes(fieldType)) { _%>
                    <div class="d-flex">
                        <input id="<%= entityFileName %>-<%= fieldName %>" type="datetime-local"
                            class="<%= fieldInputClass %>" name="<%= fieldName %>"
                    </div>
                    <%_ } else if (fieldTypeBlobContent === 'text') { _%>
                    <textarea class="<%= fieldInputClass %>" name="<%= fieldName %>"
                        id="<%= entityFileName %>-<%= fieldName %>"
                        :class="{'valid': !$v.<%= entityInstance %>.<%= fieldName %>.$invalid, 'invalid': $v.<%= entityInstance %>.<%= fieldName %>.$invalid }"
                        v-model="$v.<%= entityInstance %>.<%= fieldName %>.$model"
                        <% if (fields[idx].fieldValidate === true && fields[idx].fieldValidateRules.includes('required')) { %>
                        required<% } %>></textarea>
                    <%_ } else { _%>
                    <el-input type="<%= fieldInputType %>" v-model="editItem.<%= fieldName %>" class="<%= fieldInputClass %>"></el-input>
                    <%_ } _%>
                    <%_ } _%>            
                </el-form-item>
                <%_ } _%>     
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button @click="dialogFormVisible = false">取消</el-button>
                <el-button type="primary" @click="dialogStatus==='create'?createData():updateData()">确定</el-button>
            </div>
        </el-dialog>
    </div>
</template>

<script lang="ts" src="./<%= entityFileName %>.component.ts">
</script>
